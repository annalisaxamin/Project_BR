setwd("~/Documents/Repo_Git/Project_BR")
knitr::opts_chunk$set(warning=FALSE,
message=FALSE,
tidy.opts=list(width.cutoff = 80),
tidy = TRUE,
fig.width = unit(3, "cm"),
fig.height = unit(2, "cm"),
fig.align = "center"
)
load("data/Lung_adenocarcinoma.RData")
load("/data/Lung_adenocarcinoma.RData")
load("./data/Lung_adenocarcinoma.RData")
# Set working directory
setwd("~/Documents/Repo_Git/Project_BR")
load("./data/Lung_adenocarcinoma.RData")
load("./RData/Lung_adenocarcinoma.RData")
print('Reproducibility information:')
Sys.time()
proc.time()
options(width = 120)
session_info()
library("sessioninfo")
library(tidyverse)
library(biomaRt)
library(MotifDb) # large collection of motifs across different species
library(seqLogo)
library(PWMEnrich)
library(PWMEnrich.Hsapiens.background)
library(GEOquery)
library(oligo)
library("pd.hg.u133.plus.2")
library(hgu133plus2.db)
library(genefilter)
library(limma)
library(pheatmap)
library("stringr")
library("GenomicFeatures") # to build object with specific information such as genomic coordinates
library("ggplot2")
library("edgeR") # designed to perform Differential Expression Analysis from RNA-Seq data
library(fgsea) # computation of enrichment scores and other statistics
library(org.Hs.eg.db) # database annotation human specific transcript from Ensembl
library(clusterProfiler) # uses Fisher test, explore gene list of interest against a reference
library(enrichplot) # build enrich map
library(ggnewscale)
library(DOSE)
library(pathview) # contains cartoons of pathways and we project on them our genes of interest
library("sessioninfo")
library(tidyverse)
library(biomaRt)
library(MotifDb) # large collection of motifs across different species
library(seqLogo)
library(PWMEnrich)
library(PWMEnrich.Hsapiens.background)
library(GEOquery)
library(oligo)
library("pd.hg.u133.plus.2")
library(hgu133plus2.db)
library(genefilter)
library(limma)
library(pheatmap)
library("stringr")
library("GenomicFeatures") # to build object with specific information such as genomic coordinates
library("ggplot2")
library("edgeR") # designed to perform Differential Expression Analysis from RNA-Seq data
library(fgsea) # computation of enrichment scores and other statistics
library(org.Hs.eg.db) # database annotation human specific transcript from Ensembl
library(clusterProfiler) # uses Fisher test, explore gene list of interest against a reference
library(enrichplot) # build enrich map
library(ggnewscale)
library(DOSE)
library(pathview) # contains cartoons of pathways and we project on them our genes of interest
print('Reproducibility information:')
Sys.time()
proc.time()
options(width = 120)
session_info()
load("./RData/Lung_adenocarcinoma.RData")
#
knitr::opts_chunk$set(warning=FALSE,
message=FALSE,
tidy.opts=list(width.cutoff = 80),
tidy = TRUE,
fig.align = "center"
)
# Set working directory
setwd("~/Documents/Repo_Git/Project_BR")
library(sessioninfo)
library(tidyverse)
library(biomaRt)
library(MotifDb) # large collection of motifs across different species
library(seqLogo)
library(PWMEnrich)
library(PWMEnrich.Hsapiens.background)
library(GEOquery)
library(oligo)
library(pd.hg.u133.plus.2)
library(hgu133plus2.db)
library(genefilter)
library(limma)
library(pheatmap)
library(stringr)
library(GenomicFeatures) # to build object with specific information such as genomic coordinates
library(ggplot2)
library(edgeR) # designed to perform Differential Expression Analysis from RNA-Seq data
library(fgsea) # computation of enrichment scores and other statistics
library(org.Hs.eg.db) # database annotation human specific transcript from Ensembl
library(clusterProfiler) # uses Fisher test, explore gene list of interest against a reference
library(enrichplot) # build enrich map
library(ggnewscale)
library(DOSE)
library(pathview) # contains cartoons of pathways and we project on them our genes of interest
load("./RData/Lung_adenocarcinoma.RData")
# Explore only the first 5 rows of the dataframe
head(raw_counts_df, n=5)
head(rownames(raw_counts_df), n=5)
head(colnames(raw_counts_df), n=5)
# Explore only the first 5 rows of the dataframe
head(c_anno_df, n = 5)
head(rownames(c_anno_df), n=5)
head(colnames(c_anno_df)) # there are only 2 columns: sample and condition
# Explore only the first 5 rows of the dataframe
head(r_anno_df, n = 5)
head(rownames(r_anno_df), n=5)
head(colnames(r_anno_df)) # there are only 3 columns: ensembl_gene_id, external_gene_name, length
# get the list of possible attributes
ensembl <- useMart("ensembl")
ensembl <- useDataset("hsapiens_gene_ensembl",mart=ensembl)
attributes <- listAttributes(ensembl)
query <- getBM(attributes=c("ensembl_gene_id",
"external_gene_name",
"gene_biotype"),
filters = c("ensembl_gene_id"),
values = r_anno_df$ensembl_gene_id,
mart = ensembl)
query_protein_coding <- query[which(query$gene_biotype == "protein_coding"), ]
query_protein_coding
indexes_r_anno_df <- which(r_anno_df$ensembl_gene_id %in% query_protein_coding$ensembl_gene_id)
indexes_r_anno_df
r_anno_df_protein_coding <- r_anno_df[indexes_r_anno_df, ]
indexes_raw_counts_df <- which(rownames(raw_counts_df) %in% query_protein_coding$ensembl_gene_id)
indexes_raw_counts_df
raw_counts_df_protein_coding <- raw_counts_df[indexes_raw_counts_df, ]
indexes_r_anno_df <- which(r_anno_df$ensembl_gene_id %in% query_protein_coding$ensembl_gene_id)
r_anno_df_protein_coding <- r_anno_df[indexes_r_anno_df, ]
indexes_raw_counts_df <- which(rownames(raw_counts_df) %in% query_protein_coding$ensembl_gene_id)
raw_counts_df_protein_coding <- raw_counts_df[indexes_raw_counts_df, ]
View(r_anno_df)
